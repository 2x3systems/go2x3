
Welcome to the go2x3 tutorial series!

=================================================================
|                       go2x3 (v1.2022.2)                       |
|                      https://2x3.systems                      |
|                                                               |
|       "OH LET ME BEHOLD YOUR PRESENCE‚Äù  EXODUS 33:2x3x3       |
=================================================================

Our friend the proton:  p=1,v=3,"3:BBo 2Aoo A,BB,+++   +++ +++   ","1-2-3",5,13,35,


If we want to get the traces of a 2x3 graph, we can!
proton.Traces():  (5, 13, 35)
proton.Traces(10):  (5, 13, 35, 97, 275, 793, 2315, 6817, 20195, 60073)

Or we can access each Traces element easily thanks to python:
    T[0]: 5
    T[1]: 13
    T[2]: 35
    T[3]: 97
    T[4]: 275
    T[5]: 793
    T[6]: 2315
    T[7]: 6817
    T[8]: 20195
    T[9]: 60073

Now let's meet GraphStream, allowing us to do more useful things with particle Graph objects.
GraphStream is a chain (pipeline) of Graph operators where Graphs are "pushed" into a stream's inlet and "pulled" from its outlet. 
Adding .Print(label) prints each graph that passes though the stream, printing the given label along with a counter.
Adding .Go() terminates a stream and pulls all the graphs through it:
Hello proton!,000001,p=1,v=3,"3:BBo 2Aoo A,BB,+++   +++ +++   ","1-2-3",5,13,35,

For each particle that AllVtxSigns() takes in, it sends out all possible permutations of loops and arrows:
electron.AllVtxSigns,000001,p=1,v=1,"1:ooo A,+++   ","1",3,
electron.AllVtxSigns,000002,p=1,v=1,"1:*oo A,-++   ","1^",1,
electron.AllVtxSigns,000003,p=1,v=1,"1:**o A,--+   ","1^^",-1,
electron.AllVtxSigns,000004,p=1,v=1,"1:*** A,---   ","1^^^",-3,

The more loops and arrows that are present, the more permutations that are possible:
proton.AllVtxSigns,000001,p=1,v=3,"3:BBo 2Aoo A,BB,+++   +++ +++   ","1-2-3",5,13,35,
proton.AllVtxSigns,000002,p=1,v=3,"3:B*o ACo Boo A,B,C,+-+   +++   +++   ","1^-2-3",3,9,21,
proton.AllVtxSigns,000003,p=1,v=3,"3:B** ACo Boo A,B,C,+--   +++   +++   ","1^^-2-3",1,13,7,
proton.AllVtxSigns,000004,p=1,v=3,"3:BB* 2Aoo A,BB,++-   +++ +++   ","1-2^-3",3,13,21,
proton.AllVtxSigns,000005,p=1,v=3,"3:BC* A*o Aoo A,B,C,++-   +-+   +++   ","1^-2^-3",1,9,7,
proton.AllVtxSigns,000006,p=1,v=3,"3:B** AC* Boo A,B,C,+--   ++-   +++   ","1^^-2^-3",-1,13,-7,
proton.AllVtxSigns,000007,p=1,v=3,"3:B*o ACo Boo A,B,C,+-+   +++   +++   ","1-2-3^",3,9,21,
proton.AllVtxSigns,000008,p=1,v=3,"3:2B*o AAo AA,B,+-+ +-+   +++   ","1^-2-3^",1,5,7,
proton.AllVtxSigns,000009,p=1,v=3,"3:C** C*o ABo A,B,C,+--   +-+   +++   ","1^^-2-3^",-1,9,-7,
proton.AllVtxSigns,000010,p=1,v=3,"3:BC* A*o Aoo A,B,C,++-   +-+   +++   ","1-2^-3^",1,9,7,
proton.AllVtxSigns,000011,p=1,v=3,"3:BB* 2A*o A,BB,++-   +-+ +-+   ","1^-2^-3^",-1,5,-7,
proton.AllVtxSigns,000012,p=1,v=3,"3:B** AC* B*o A,B,C,+--   ++-   +-+   ","1^^-2^-3^",-3,9,-21,
proton.AllVtxSigns,000013,p=1,v=3,"3:B** ACo Boo A,B,C,+--   +++   +++   ","1-2-3^^",1,13,7,
proton.AllVtxSigns,000014,p=1,v=3,"3:C** C*o ABo A,B,C,+--   +-+   +++   ","1^-2-3^^",-1,9,-7,
proton.AllVtxSigns,000015,p=1,v=3,"3:2B** AAo AA,B,+-- +--   +++   ","1^^-2-3^^",-3,13,-21,
proton.AllVtxSigns,000016,p=1,v=3,"3:B** AC* Boo A,B,C,+--   ++-   +++   ","1-2^-3^^",-1,13,-7,
proton.AllVtxSigns,000017,p=1,v=3,"3:B** AC* B*o A,B,C,+--   ++-   +-+   ","1^-2^-3^^",-3,9,-21,
proton.AllVtxSigns,000018,p=1,v=3,"3:2B** AA* AA,B,+-- +--   ++-   ","1^^-2^-3^^",-5,13,-35,

For particles containing only 'gamma' vertices, only one permutation is possible:
gamma.AllVtxSigns,000001,p=1,v=2,"2:2||| AA,+++ +++   ","1---2",0,18,

All edge permutations for a two-vertex photon:
gamma.AllEdgeSigns,000001,p=1,v=2,"2:2||| AA,+++ +++   ","1---2",0,18,
gamma.AllEdgeSigns,000002,p=1,v=2,"2:2||| AA,-++ -++   ","1--~2",0,2,
gamma.AllEdgeSigns,000003,p=1,v=2,"2:2||| AA,--+ --+   ","1-~~2",0,2,
gamma.AllEdgeSigns,000004,p=1,v=2,"2:2||| AA,--- ---   ","1~~~2",0,18,

For each particle that AllEdgeSigns() takes in, it sends out all possible permutations of positive and negative edges:
proton.AllEdgeSigns,000001,p=1,v=3,"3:BBo 2Aoo A,BB,+++   +++ +++   ","1-2-3",5,13,35,
proton.AllEdgeSigns,000002,p=1,v=3,"3:BBo 2Aoo A,BB,-++   -++ +++   ","1~2-3",5,13,35,
proton.AllEdgeSigns,000003,p=1,v=3,"3:BBo 2Aoo A,BB,-++   -++ +++   ","1-2~3",5,13,35,
proton.AllEdgeSigns,000004,p=1,v=3,"3:BBo 2Aoo A,BB,--+   -++ -++   ","1~2~3",5,13,35,

Most graphs can be expressed identically in multiple ways.
Consider various equivalent ways to label a neutron:
neutron[a]:  p=1,v=4,"4:BBC 2A|o Aoo A,BB,C,+++   +++ +++   +++   ","1-2-3-1-4",4,14,34,98,

neutron[b]:  p=1,v=4,"4:BBC 2A|o Aoo A,BB,C,+++   +++ +++   +++   ","1-2-3-1 2-4",4,14,34,98,

neutron[c]:  p=1,v=4,"4:BBC 2A|o Aoo A,BB,C,+++   +++ +++   +++   ","3-4 2-3-1-2",4,14,34,98,


EnumPureParticles() runs an algorithm that generates all possible valid particles having only loops and positive edges.
This algorithm is mechanical and will therefore repeat equivalent particles having different labels. 
Let's generate from v=1 to v=3:
out[7],000001,p=1,v=1,"1:ooo A,+++   ","1",3,
out[7],000002,p=1,v=2,"2:2|oo AA,+++ +++   ","1-2",4,10,
out[7],000003,p=1,v=2,"2:2||o AA,+++ +++   ","1=2",2,10,
out[7],000004,p=1,v=2,"2:2||| AA,+++ +++   ","1---2",0,18,
out[7],000005,p=1,v=3,"3:BBo 2Aoo A,BB,+++   +++ +++   ","1-2-3",5,13,35,
out[7],000006,p=1,v=3,"3:BBo 2Aoo A,BB,+++   +++ +++   ","1-2-3",5,13,35,
out[7],000007,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1-2=3",3,15,27,
out[7],000008,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1-2=3",3,15,27,
out[7],000009,p=1,v=3,"3:BBo 2Aoo A,BB,+++   +++ +++   ","1-2 1-3",5,13,35,
out[7],000010,p=1,v=3,"3:3||o AAA,+++ +++ +++   ","1-2-3-1",3,9,27,
out[7],000011,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1=2-3",3,15,27,
out[7],000012,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1=2-3",3,15,27,
out[7],000013,p=1,v=3,"3:2B|| AAo AA,B,+++ +++   +++   ","1-2=3-1",1,13,19,
out[7],000014,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1-2 1=3",3,15,27,
out[7],000015,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1=2 1-3",3,15,27,
out[7],000016,p=1,v=3,"3:2B|| AAo AA,B,+++ +++   +++   ","1-2-3=1",1,13,19,
out[7],000017,p=1,v=3,"3:2B|| AAo AA,B,+++ +++   +++   ","1=2-3-1",1,13,19,

The DropDupes() operator only emits unique graphs while dropping duplicates.
out[8],000001,p=1,v=1,"1:ooo A,+++   ","1",3,
out[8],000002,p=1,v=2,"2:2|oo AA,+++ +++   ","1-2",4,10,
out[8],000003,p=1,v=2,"2:2||o AA,+++ +++   ","1=2",2,10,
out[8],000004,p=1,v=2,"2:2||| AA,+++ +++   ","1---2",0,18,
out[8],000005,p=1,v=3,"3:BBo 2Aoo A,BB,+++   +++ +++   ","1-2-3",5,13,35,
out[8],000006,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1-2=3",3,15,27,
out[8],000007,p=1,v=3,"3:3||o AAA,+++ +++ +++   ","1-2-3-1",3,9,27,
out[8],000008,p=1,v=3,"3:2B|| AAo AA,B,+++ +++   +++   ","1-2=3-1",1,13,19,

We can select by matching Traces:
out[9],000001,p=1,v=2,"2:2||| AA,+++ +++   ","1---2",0,18,

We can also select by min and max vertex count:
out[10],000001,p=1,v=1,"1:ooo A,+++   ","1",3,
out[10],000002,p=1,v=2,"2:2|oo AA,+++ +++   ","1-2",4,10,
out[10],000003,p=1,v=2,"2:2||o AA,+++ +++   ","1=2",2,10,
out[10],000004,p=1,v=2,"2:2||| AA,+++ +++   ","1---2",0,18,

We can select by loops (or arrows):
out[11],000001,p=1,v=1,"1:ooo A,+++   ","1",3,
out[11],000002,p=1,v=2,"2:2||o AA,+++ +++   ","1=2",2,10,
out[11],000003,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1-2=3",3,15,27,
out[11],000004,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1-2=3",3,15,27,
out[11],000005,p=1,v=3,"3:3||o AAA,+++ +++ +++   ","1-2-3-1",3,9,27,
out[11],000006,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1=2-3",3,15,27,
out[11],000007,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1=2-3",3,15,27,
out[11],000008,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1-2 1=3",3,15,27,
out[11],000009,p=1,v=3,"3:BBC AAo Aoo A,B,C,+++   +++   +++   ","1=2 1-3",3,15,27,

We can select by loops AND arrows:
out[12],000001,p=1,v=3,"3:B** ACo Boo A,B,C,+--   +++   +++   ","1^^-2-3",1,13,7,
out[12],000002,p=1,v=3,"3:BC* A*o Aoo A,B,C,++-   +-+   +++   ","1^-2^-3",1,9,7,
out[12],000003,p=1,v=3,"3:B** AC* Boo A,B,C,+--   ++-   +++   ","1^^-2^-3",-1,13,-7,
out[12],000004,p=1,v=3,"3:2B*o AAo AA,B,+-+ +-+   +++   ","1^-2-3^",1,5,7,
out[12],000005,p=1,v=3,"3:C** C*o ABo A,B,C,+--   +-+   +++   ","1^^-2-3^",-1,9,-7,
out[12],000006,p=1,v=3,"3:BC* A*o Aoo A,B,C,++-   +-+   +++   ","1-2^-3^",1,9,7,
out[12],000007,p=1,v=3,"3:BB* 2A*o A,BB,++-   +-+ +-+   ","1^-2^-3^",-1,5,-7,
out[12],000008,p=1,v=3,"3:B** ACo Boo A,B,C,+--   +++   +++   ","1-2-3^^",1,13,7,
out[12],000009,p=1,v=3,"3:C** C*o ABo A,B,C,+--   +-+   +++   ","1^-2-3^^",-1,9,-7,
out[12],000010,p=1,v=3,"3:B** AC* Boo A,B,C,+--   ++-   +++   ","1-2^-3^^",-1,13,-7,
